[
    {
        "id": "9e0862f4.a82c9",
        "type": "tab",
        "label": "Azure IoT Edge",
        "disabled": true,
        "info": ""
    },
    {
        "id": "424b6553.dbf1ec",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cc340895e78f075b",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "9aee356dd59759f0",
        "type": "tab",
        "label": "Azure IoT Edge",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e543a472.1c5818",
        "type": "ui_tab",
        "name": "IoT Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8b8bd259.7af5b",
        "type": "ui_group",
        "name": "Charts",
        "tab": "e543a472.1c5818",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "d5ae2d76.f72a",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "eb53bb6b.018308",
        "type": "ui_group",
        "name": "Gauges",
        "tab": "e543a472.1c5818",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ad0fb0dd.c701d",
        "type": "edgeclient"
    },
    {
        "id": "b723e069ec1362f0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.1.17",
        "port": "1888",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8a770dff.d5cf1",
        "type": "function",
        "z": "9e0862f4.a82c9",
        "name": "Output msg",
        "func": "var newMsg = { payload: msg.payload }\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "d8dae50b.812ae8"
            ]
        ]
    },
    {
        "id": "a6d8f764.cfe618",
        "type": "moduletwin",
        "z": "9e0862f4.a82c9",
        "client": "ad0fb0dd.c701d",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "ce65f7c5.c5d048"
            ]
        ]
    },
    {
        "id": "ce65f7c5.c5d048",
        "type": "debug",
        "z": "9e0862f4.a82c9",
        "name": "Twin msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "ba813da4.bd919",
        "type": "inject",
        "z": "9e0862f4.a82c9",
        "name": "Running",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "running",
        "payloadType": "str",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "329a4a8d.cadb16"
            ]
        ]
    },
    {
        "id": "329a4a8d.cadb16",
        "type": "function",
        "z": "9e0862f4.a82c9",
        "name": "Reported msg",
        "func": "var reported = { payload:\n\"{\\\"moduleStatus\\\": \\\"\" + msg.payload + \"\\\"}\" }\nreturn reported;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "a6d8f764.cfe618"
            ]
        ]
    },
    {
        "id": "6fed83d0.7d743c",
        "type": "inject",
        "z": "9e0862f4.a82c9",
        "name": "Stopped",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "stopped",
        "payloadType": "str",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "329a4a8d.cadb16"
            ]
        ]
    },
    {
        "id": "d8dae50b.812ae8",
        "type": "moduleoutput",
        "z": "9e0862f4.a82c9",
        "client": "ad0fb0dd.c701d",
        "output": "output1",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "541097f6.edc958",
        "type": "modulemethod",
        "z": "9e0862f4.a82c9",
        "client": "ad0fb0dd.c701d",
        "method": "setValue",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "d6c374a7.fea2d8",
                "c3effbe1.9672e8",
                "c85d97b1.90e908"
            ]
        ]
    },
    {
        "id": "60a82287.44320c",
        "type": "moduleinput",
        "z": "9e0862f4.a82c9",
        "client": "ad0fb0dd.c701d",
        "input": "input1",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "e581a7a2.8c8f78",
                "1405034e.8d367d",
                "8a770dff.d5cf1"
            ]
        ]
    },
    {
        "id": "e581a7a2.8c8f78",
        "type": "debug",
        "z": "9e0862f4.a82c9",
        "name": "Input msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 420,
        "wires": []
    },
    {
        "id": "d6c374a7.fea2d8",
        "type": "debug",
        "z": "9e0862f4.a82c9",
        "name": "Method msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 640,
        "wires": []
    },
    {
        "id": "c3effbe1.9672e8",
        "type": "function",
        "z": "9e0862f4.a82c9",
        "name": "Response msg",
        "func": "var response = { payload:\n\"{\\\"methodpayload\\\": \\\"\" + JSON.stringify(msg.payload) + \"\\\"}\" }\nresponse.payload.timestamp = Date.now()\nresponse.status = 100\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 720,
        "wires": [
            [
                "541097f6.edc958"
            ]
        ]
    },
    {
        "id": "8f5b507c.788c7",
        "type": "comment",
        "z": "9e0862f4.a82c9",
        "name": "Module twin",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "f9ed4fb7.8e983",
        "type": "comment",
        "z": "9e0862f4.a82c9",
        "name": "Process Direct Method",
        "info": "",
        "x": 120,
        "y": 580,
        "wires": []
    },
    {
        "id": "b548b2c4.d8ccd",
        "type": "comment",
        "z": "9e0862f4.a82c9",
        "name": "Process message and send to output",
        "info": "",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "c5f9620f.742f1",
        "type": "link in",
        "z": "424b6553.dbf1ec",
        "name": "dashboardTelemetry",
        "links": [
            "1405034e.8d367d"
        ],
        "x": 75,
        "y": 40,
        "wires": [
            [
                "f48f8e4a.f2805"
            ]
        ]
    },
    {
        "id": "1405034e.8d367d",
        "type": "link out",
        "z": "9e0862f4.a82c9",
        "name": "telemetryToDashboard",
        "links": [
            "c5f9620f.742f1"
        ],
        "x": 355,
        "y": 360,
        "wires": []
    },
    {
        "id": "f48f8e4a.f2805",
        "type": "function",
        "z": "424b6553.dbf1ec",
        "name": "Process to chart elements",
        "func": "var machineTempMsg = {};\nmachineTempMsg.payload = msg.payload.machine.temperature;\nmachineTempMsg.timestamp = msg.timestamp;\nmachineTempMsg.topic = \"Machine Temperature\";\n\nvar ambientTempMsg = {};\nambientTempMsg.payload = msg.payload.ambient.temperature;\nambientTempMsg.timestamp = msg.timestamp;\nambientTempMsg.topic = \"Ambient Temperature\";\n\nreturn [machineTempMsg, ambientTempMsg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 40,
        "wires": [
            [
                "519a35c9.ac360c",
                "13de3dae.008572"
            ],
            [
                "416b0944.827d68",
                "7cb241bc.42c4"
            ]
        ]
    },
    {
        "id": "416b0944.827d68",
        "type": "ui_gauge",
        "z": "424b6553.dbf1ec",
        "name": "Ambient Temperature",
        "group": "eb53bb6b.018308",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{msg.topic}}",
        "label": "deg C",
        "format": "{{msg.payload | number:1}}",
        "min": "20",
        "max": "22",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "519a35c9.ac360c",
        "type": "ui_gauge",
        "z": "424b6553.dbf1ec",
        "name": "Machine Temperature",
        "group": "eb53bb6b.018308",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{msg.topic}}",
        "label": "deg C",
        "format": "{{msg.payload | number:1}}",
        "min": "20",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 620,
        "y": 100,
        "wires": []
    },
    {
        "id": "c85d97b1.90e908",
        "type": "link out",
        "z": "9e0862f4.a82c9",
        "name": "methodToDashboard",
        "links": [
            "4dfbd3b.2bc762c"
        ],
        "x": 435,
        "y": 720,
        "wires": []
    },
    {
        "id": "4dfbd3b.2bc762c",
        "type": "link in",
        "z": "424b6553.dbf1ec",
        "name": "dashboardMethod",
        "links": [
            "c85d97b1.90e908"
        ],
        "x": 75,
        "y": 280,
        "wires": [
            [
                "b2b39783.6520f8"
            ]
        ]
    },
    {
        "id": "77e7f977.538378",
        "type": "ui_toast",
        "z": "424b6553.dbf1ec",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Show notification",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "b2b39783.6520f8",
        "type": "function",
        "z": "424b6553.dbf1ec",
        "name": "Create notification",
        "func": "var notification = {};\nnotification.topic = msg.method\nnotification.payload = JSON.stringify(msg.payload);\nreturn notification;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "77e7f977.538378"
            ]
        ]
    },
    {
        "id": "13de3dae.008572",
        "type": "ui_chart",
        "z": "424b6553.dbf1ec",
        "name": "Machine Temperature",
        "group": "8b8bd259.7af5b",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Machine Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "Machine Temperature",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 620,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7cb241bc.42c4",
        "type": "ui_chart",
        "z": "424b6553.dbf1ec",
        "name": "Ambient Temperature",
        "group": "8b8bd259.7af5b",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Ambient Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "Ambient Temperature",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 620,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c40c5702.e52658",
        "type": "ui_button",
        "z": "424b6553.dbf1ec",
        "name": "",
        "group": "8b8bd259.7af5b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear charts",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "13de3dae.008572",
                "7cb241bc.42c4"
            ]
        ]
    },
    {
        "id": "36735329.ca4acc",
        "type": "ui_button",
        "z": "424b6553.dbf1ec",
        "name": "",
        "group": "8b8bd259.7af5b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset simulator",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"command\":\"reset\"}",
        "payloadType": "json",
        "topic": "",
        "x": 280,
        "y": 340,
        "wires": [
            [
                "1a2146f0.b44779"
            ]
        ]
    },
    {
        "id": "1a2146f0.b44779",
        "type": "link out",
        "z": "424b6553.dbf1ec",
        "name": "dashboardReset",
        "links": [
            "4e342a0d.7305e4"
        ],
        "x": 535,
        "y": 340,
        "wires": []
    },
    {
        "id": "9f1f9bbd.78b5f8",
        "type": "comment",
        "z": "9e0862f4.a82c9",
        "name": "Sending reset to simulator",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "4e342a0d.7305e4",
        "type": "link in",
        "z": "9e0862f4.a82c9",
        "name": "simulatorReset",
        "links": [
            "1a2146f0.b44779"
        ],
        "x": 215,
        "y": 500,
        "wires": [
            [
                "8a770dff.d5cf1"
            ]
        ]
    },
    {
        "id": "596b7a6fa6261a52",
        "type": "function",
        "z": "9aee356dd59759f0",
        "name": "Output msg",
        "func": "var newMsg = { payload: msg.payload }\n\nnewMsg.payload.room = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "110c2ccd251d74a0",
        "type": "moduletwin",
        "z": "9aee356dd59759f0",
        "client": "ad0fb0dd.c701d",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "e3365833dfe206cc"
            ]
        ]
    },
    {
        "id": "e3365833dfe206cc",
        "type": "debug",
        "z": "9aee356dd59759f0",
        "name": "Twin msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "03fc2c8381b514ae",
        "type": "inject",
        "z": "9aee356dd59759f0",
        "name": "Running",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "running",
        "payloadType": "str",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "4b49cc402f54b274"
            ]
        ]
    },
    {
        "id": "4b49cc402f54b274",
        "type": "function",
        "z": "9aee356dd59759f0",
        "name": "Reported msg",
        "func": "var reported = { payload:\n\"{\\\"moduleStatus\\\": \\\"\" + msg.payload + \"\\\"}\" }\nreturn reported;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 100,
        "wires": [
            [
                "110c2ccd251d74a0"
            ]
        ]
    },
    {
        "id": "5c4de72333945dee",
        "type": "inject",
        "z": "9aee356dd59759f0",
        "name": "Stopped",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "stopped",
        "payloadType": "str",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "4b49cc402f54b274"
            ]
        ]
    },
    {
        "id": "e951fcfd36866b43",
        "type": "modulemethod",
        "z": "9aee356dd59759f0",
        "client": "ad0fb0dd.c701d",
        "method": "setValue",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "c7fb93dad4a4700b",
                "03b433f98271f416",
                "3771cd8bf50d5fbf"
            ]
        ]
    },
    {
        "id": "73af1abb6ab7c1ba",
        "type": "moduleinput",
        "z": "9aee356dd59759f0",
        "client": "ad0fb0dd.c701d",
        "input": "input1",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "08dc088a666decc2",
                "6a30d30b57abcff2",
                "596b7a6fa6261a52"
            ]
        ]
    },
    {
        "id": "08dc088a666decc2",
        "type": "debug",
        "z": "9aee356dd59759f0",
        "name": "Input msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 420,
        "wires": []
    },
    {
        "id": "c7fb93dad4a4700b",
        "type": "debug",
        "z": "9aee356dd59759f0",
        "name": "Method msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 640,
        "wires": []
    },
    {
        "id": "03b433f98271f416",
        "type": "function",
        "z": "9aee356dd59759f0",
        "name": "Response msg",
        "func": "var response = { payload:\n\"{\\\"methodpayload\\\": \\\"\" + JSON.stringify(msg.payload) + \"\\\"}\" }\nresponse.payload.timestamp = Date.now()\nresponse.status = 100\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 720,
        "wires": [
            [
                "e951fcfd36866b43"
            ]
        ]
    },
    {
        "id": "ac9334c3eaa9f439",
        "type": "comment",
        "z": "9aee356dd59759f0",
        "name": "Module twin",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "af88c11c91cd8b47",
        "type": "comment",
        "z": "9aee356dd59759f0",
        "name": "Process Direct Method",
        "info": "",
        "x": 120,
        "y": 580,
        "wires": []
    },
    {
        "id": "d3587e3aef236fcd",
        "type": "comment",
        "z": "9aee356dd59759f0",
        "name": "Process message and send to output",
        "info": "",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "6a30d30b57abcff2",
        "type": "link out",
        "z": "9aee356dd59759f0",
        "name": "telemetryToDashboard",
        "links": [
            "c5f9620f.742f1"
        ],
        "x": 355,
        "y": 360,
        "wires": []
    },
    {
        "id": "3771cd8bf50d5fbf",
        "type": "link out",
        "z": "9aee356dd59759f0",
        "name": "methodToDashboard",
        "links": [
            "4dfbd3b.2bc762c"
        ],
        "x": 435,
        "y": 720,
        "wires": []
    },
    {
        "id": "b5bbccb131031093",
        "type": "comment",
        "z": "9aee356dd59759f0",
        "name": "Sending reset to simulator",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "9139729ad0e374dc",
        "type": "link in",
        "z": "9aee356dd59759f0",
        "name": "simulatorReset",
        "links": [
            "1a2146f0.b44779"
        ],
        "x": 215,
        "y": 500,
        "wires": [
            [
                "596b7a6fa6261a52",
                "8f4067c018183056"
            ]
        ]
    },
    {
        "id": "d9cc1a6997138bac",
        "type": "moduleoutput",
        "z": "9aee356dd59759f0",
        "client": "ad0fb0dd.c701d",
        "output": "output1",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "8f4067c018183056",
        "type": "moduleoutput",
        "z": "9aee356dd59759f0",
        "client": "ad0fb0dd.c701d",
        "output": "outputReset",
        "x": 580,
        "y": 500,
        "wires": []
    },
    {
        "id": "652fa983b6a72632",
        "type": "mqtt in",
        "z": "9aee356dd59759f0",
        "name": "esp",
        "topic": "esp",
        "qos": "2",
        "datatype": "auto",
        "broker": "b723e069ec1362f0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "d530a6ca73e2bf8b",
                "110c2ccd251d74a0"
            ]
        ]
    },
    {
        "id": "8d46f019894a7bdc",
        "type": "join",
        "z": "9aee356dd59759f0",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 480,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ce5109d69339246f",
        "type": "function",
        "z": "9aee356dd59759f0",
        "name": "Output msg",
        "func": "var newMsg = { payload: msg.payload }\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ea0783aa55fafb09",
        "type": "function",
        "z": "9aee356dd59759f0",
        "name": "Combine msg",
        "func": "if (msg.topic === \"input\") {\n    // 更新消息A\n    let messageA =  msg.payload;\n    let merA\n    global.set(\"\")\n\n} else if (msg.topic === \"esp\") {\n    // 更新消息B\n    context.set(\"messageB\", msg.payload);\n\n} else {\n    // 如果收到其他主题的消息，直接返回空消息\n    return null;\n}\n\n// 获取最新的消息A和消息B\nlet messageA = context.get(\"messageA\");\nlet messageB = context.get(\"messageB\");\n\n// 检查消息A和消息B是否都存在\nif (messageA && messageB) {\n    let mergedMessage = {\n        payload: {\n            timeStamp: messageA.timeCreated,\n            temperature: messageA.ambient.temperature,\n            humidity: messageA.ambient.humidity,\n            light: messageB.light,\n            detect: messageB.detect\n        },\n        topic: \"inputCombined\"\n    };\n\n    return mergedMessage;\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "10426855d43ad56d",
        "type": "debug",
        "z": "9aee356dd59759f0",
        "name": "esp msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 220,
        "wires": []
    },
    {
        "id": "d530a6ca73e2bf8b",
        "type": "json",
        "z": "9aee356dd59759f0",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "546571ddfb616d78"
            ]
        ]
    },
    {
        "id": "546571ddfb616d78",
        "type": "function",
        "z": "9aee356dd59759f0",
        "name": "Output msg",
        "func": "var newMsg = { payload: msg.payload }\n\nnewMsg.payload.room = 1;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 240,
        "wires": [
            []
        ]
    }
]